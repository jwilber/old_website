col=4,linecol=4,clinecol=2, main = "Nearest Neighbor Stem Plot")
par(add=T)
points(home, pol_values, col = "coral",
pch=13, cex=3)
y = x
source('~/Desktop/pubpol275/lab5/HSIANG_lab5/part2.R', echo=TRUE)
stem(home, pol_values, xlim=c(-5,5), ylim = c(-5,20),
col=4,linecol=4,clinecol=2, main = "Initial Stem Plot")
house_axis <- -5:5
pol_values = c( -4, -1, 0, 3)
n1 <- length(house_axis)
n_neighbor = vector(mode = "numeric", length = 11)
for (i in 1:n1) {
print(i)
n_neighbor[i] = knnx.index(pol_values, house_axis[i],1)
}
stem(house_axis, pol_values[n_neighbor],xlim=c(-5,5), ylim = c(-3,18),
col=4,linecol=4,clinecol=2, main = "Nearest Neighbor Stem Plot")
par(add=T)
points(home, pol_values, col = "coral",
pch=13, cex=3)
source('~/Desktop/pubpol275/lab5/HSIANG_lab5/part2.R', echo=TRUE)
stem(house_axis, pol_levels[n_neighbor],xlim=c(-5,5), ylim = c(-3,18),
col=4,linecol=4,clinecol=2, main = "Nearest Neighbor Stem Plot")
pol_levels <- c(17.2, 3.4, 2, -1)
n1 <- length(house_axis)
n_neighbor = vector(mode = "numeric", length = 11)
for (i in 1:n1) {
print(i)
n_neighbor[i] = knnx.index(pol_values, house_axis[i],1)
}
stem(house_axis, pol_levels[n_neighbor],xlim=c(-5,5), ylim = c(-3,18),
col=4,linecol=4,clinecol=2, main = "Nearest Neighbor Stem Plot")
par(add=T)
points(home, pol_values, col = "coral",
pch=13, cex=3)
pol_levels
n_neighbor
pol_levels
pol_values = c( -4, -1, 0, 3)
pol_levels <- c(17.2, 3.4, 2, -1)
n1 <- length(house_axis)
n_neighbor = vector(mode = "numeric", length = 11)
for (i in 1:n1) {
print(i)
n_neighbor[i] = knnx.index(pol_values, house_axis[i],1)
}
stem(house_axis, pol_levels[n_neighbor],xlim=c(-5,5), ylim = c(-3,18),
col=4,linecol=4,clinecol=2, main = "Nearest Neighbor Stem Plot")
par(add=T)
points(home, pol_values, col = "coral",
pch=13, cex=3)
house_axis <- -5:5
pol_values = c( -4, -1, 0, 3)
pol_levels <- c(17.2, 3.4, 2, -1)
n1 <- length(house_axis)
n_neighbor = vector(mode = "numeric", length = 11)
for (i in 1:n1) {
print(i)
n_neighbor[i] = knnx.index(pol_values, house_axis[i],1)
}
stem(house_axis, pol_levels[n_neighbor],xlim=c(-5,5), ylim = c(-3,18),
col=4,linecol=4,clinecol=2, main = "Nearest Neighbor Stem Plot")
par(add=T)
points(home, pol_levels, col = "coral",
pch=13, cex=3)
pol_levels[n_neighbor]
library(xtable)
15*35000
reg_table <- xtable(mcb)
print(reg_table, type = "latex", file = "reg-table.tex")
print(reg_table, type = "html", file = "reg-table.html")
source('~/.active-rstudio-document', echo=TRUE)
reg_table
mcb
print(reg_table, type = "latex", file = "reg-table.tex")
print(reg_table, type = "latex")
print(reg_table, type = "html")
mcb
reg_table <- xtable(mcb)
reg_table
print(reg_table, type = "html")
print(mcv)
print(mcb)
mcb <- print(microbenchmark(no_cache(c(1:1000)), si_cache(c(1:1000)), mem_cache(c(1:1000))))
print(reg_table, type = "html")
mcb
microbenchmark(cum_prod_init(c(1:10000)), cum_prod_grow(c(1:10000)), times=100)
time_start <- proc.time()
x <- runif(100)
y <- rnorm(200)
z <- rpois(400, lambda=2)
r <- sum(x,y,z)
proc.time() - time_start
microbenchmark( sd1, sd2, sd3, sd4, sd5, times=10000)
system.time(for(i in 1:1000) mean(sample(1:1000, 100)))
microbenchmark( sd1, sd2, sd3, sd4, sd5, times=10000)
microbenchmark( sd1, sd2, sd3, sd4, sd5, times=10000)
microbenchmark( sd1, sd2, sd3, sd4, sd5, times=10000)
microbenchmark( sd1, sd2, sd3, sd4, sd5, times=10000)
set.seed(100)
x   <- rnorm(10000)
sd1 <- sd(x)
sd2 <- sqrt( var(x) )
sd3 <- var(x) ^ (1/2)
sd4 <- '^'(var(x), .5)
sd5 <- sqrt( sum( (x - mean(x))^2) / (length(x) - 1) )
microbenchmark( sd1, sd2, sd3, sd4, sd5, times=10000)
set.seed(100)
x   <- rnorm(10000)
sd1 <- sd(x)
sd2 <- sqrt( var(x) )
sd3 <- var(x) ^ (1/2)
sd4 <- '^'(var(x), .5)
sd5 <- sqrt( sum( (x - mean(x))^2) / (length(x) - 1) )
microbenchmark( sd1, sd2, sd3, sd4, sd5, times=10000)
mcb <- print(microbenchmark(no_cache(c(1:1000)), si_cache(c(1:1000)), mem_cache(c(1:1000))))
2200/3000
22000/3000
3000/175
22000/175
cos(4)
11 * cos(4*pi/2)
cos(229.183)
cos(4 * pi/180)
cos(4 * pi/180)*111.1
(4*300 + 6*200)/600
(6*200) + (-3*100)/600
com <- function(x,y,p) {
x1 <- sum(x) / sum(p)
y1 <- sum(y) / sum(p)
return(x1,y1)
}
com(c(4,6,0), c(0,6,-3), c(300,200,100))
(300*4 + 6*200) / 600
(6*200 + -3*100) / 600
120/15
120-75
library(shiny)
runExample("01_hello")
?babynames
??babynames
library(ggthemes)
Stat <- rep(c("Dead","Survived"), 4)
Stat
Stat <- rep(c("Dead","Survived"), 4)
trt <- rep(c("Tolbutamide", "Placebo"), 4)
ag <- c(rep("<55",4),rep("55+",4))
freq <- c(8, 98, 5, 115, 22, 76, 16, 69)
df <- data.frame(Status    = Stat,
Treatment = trt,
Agegrp    = ag,
Freq      = freq)
(df <- data.frame(Status    = Stat,
Treatment = trt,
Agegrp    = ag,
Freq      = freq))
fn <- c("Mark", "Michael", "Nick")
ln <- c("Mccoy", "Koehler,", "Glennister")
af <- c("friend", "brother", "friend")
em <- c("mmccoy@gmail.com", "na", "nglennister@sdsu.edu")
dte <- c(rep("10/17/18",3))
(df2 <- data.frame(Firstname   = fn,
Lastname    = ln,
Affiliation = af,
Email       = em,
Date        = dt))
fn <- c("Mark", "Michael", "Nick")
ln <- c("Mccoy", "Koehler,", "Glennister")
af <- c("friend", "brother", "friend")
em <- c("mmccoy@gmail.com", "na", "nglennister@sdsu.edu")
dte <- c(rep("10/17/18",3))
(df2 <- data.frame(Firstname   = fn,
Lastname    = ln,
Affiliation = af,
Email       = em,
Date        = dt))
(df2 <- data.frame(Firstname   = fn,
Lastname    = ln,
Affiliation = af,
Email       = em,
Date        = dte))
ln <- c("Mccoy", "Koehler", "Glennister")
af <- c("friend", "brother", "friend")
em <- c("mmccoy@gmail.com", "na", "nglennister@sdsu.edu")
dte <- c(rep("10/17/18",3))
(df2 <- data.frame(Firstname   = fn,
Lastname    = ln,
Affiliation = af,
Email       = em,
Date        = dte))
aids <- read.table(url(http://www.medepi.net/data/aids.txt))
aids <- read.table(url("http://www.medepi.net/data/aids.txt"))
aids
head(aids)
aids <- read.table(url("http://www.medepi.net/data/aids.txt"), header=TRUE)
head(aids)
qplot(aids$year, aids$cases)
library(ggplot2)
qplot(aids$year, aids$cases)
qplot(aids$year, aids$cases) + geom_line()
qplot(aids$year, aids$cases, geom="line")
qplot(aids$year, aids$cases, geom="path")
ggplot(aids, aes(x=year, y = cases)) + geom_line()
aids
plot(aids$year, aids$cases)
plot(aids$year, aids$cases, type='l')
aids$cases[1:4] <- 0
ggplot(aids, aes(x=year, y = cases)) + geom_line()
aids$cases[1:4]
aids$cases[is.na(aids$cases)] <- 0
tapply(aids, class)
sapply(aids, class)
aids$cases <- as.numeric(aids$cases)
library(ggplot2)
aids$cases[is.na(aids$cases)] <- 0
ggplot(aids, aes(x=year, y = cases)) + geom_line()
measles <- read.table(url("http://www.medepi.net/data/measles.txt."), header=T)
measles <- read.table(url("http://www.medepi.net/data/measles.txt"), header=T)
head(measles)
class(measles)
plot(measles$year, measles$cases, type="l", lwd=2, col="skyblue1")
plot(measles$year, measles$cases, type="l", lwd=2, col="skyblue1")
plot(measles$year, log(measles$cases), type="l", lwd=2, col="skyblue1")
hepb <- read.table(url("http://www.medepi.net/data/hepb.txt"), header=T, na.strings = ".")
head(hepb)
hepb <- read.table(url("http://www.medepi.net/data/hepb.txt"), header=T, na.strings = ".")
matplot(hepb$year, cbind(hepb$cases,aids$cases),
type = "l", lwd = 2, xlab = "Year", ylab = "Cases",
main = "Reported cases of Hepatitis B and AIDS, United States, 1980--2003")
legend(1980, 100000, legend = c("Hepatitis B", "AIDS"),
lwd = 2, lty = 1:2, col = 1:2)
```
?qnorm
qnorm(1-.05)/2
qnorm(1-.95)/2
edat <- read.table("http://www.medepi.net/data/evans.txt", header = TRUE, sep = "")
str(edat)
xtabs(~chd, data = edat)
edat$chd2 <- factor(edat$chd, levels = 0:1, labels = c("No", "Yes"))
xtabs(~chd2, data = edat) # test
xtabs(~cat, data = edat)
edat$cat2 <- factor(edat$cat, levels = 0:1,   labels = c("Normal", "High"))
xtabs(~cat2, data = edat) # test
xtabs(~smk, data = edat)
edat$smk2 <- factor(edat$smk, levels = 0:1, labels = c("Never", "Ever"))
xtabs(~smk2, data = edat) # test
xtabs(~ecg, data = edat)
edat$ecg2 <- factor(edat$ecg, levels = 0:1, labels = c("Normal", "Abnormal"))
xtabs(~ecg2, data = edat) # test
xtabs(~hpt, data = edat)
edat$hpt2 <- factor(edat$hpt, levels = 0:1, labels = c("No", "Yes"))
xtabs(~hpt2, data = edat) # test
#### (2)
quantile(edat$age)
edat$age4 <- cut(edat$age, quantile(edat$age), right = FALSE, include.lowest = TRUE)
xtabs(~age4, data = edat) # test
#### (3)
hptnew <- rep(NA, nrow(edat))
normal <- edat$sbp < 120 & edat$dbp < 80
hptnew[normal] <- 1
prehyp <- (edat$sbp >= 120 & edat$sbp < 140) | (edat$dbp >= 80 & edat$dbp < 90)
hptnew[prehyp] <- 2
stage1 <- (edat$sbp >= 140 & edat$sbp < 160) | (edat$dbp >= 90 & edat$dbp < 100)
hptnew[stage1] <- 3
stage2 <- edat$sbp >= 160 | edat$dbp >= 100
hptnew[stage2] <- 4
edat$hpt4 <- factor(hptnew, levels = 1:4,
labels=c("Normal", "PreHTN", "HTN.Stage1", "HTN.Stage2"))
xtabs(~hpt4, data = edat) # test
#### (4)
xtabs(~hpt2 + hpt4, data = edat)
odat <- read.table("http://www.medepi.net/data/oswego/oswego.txt", sep = "",
header = TRUE, na.strings = ".")
str(odat)
head(odat)
mdt <- paste("4/18/1940", odat$meal.time)
meal.dt <- strptime(mdt, "%m/%d/%Y %I:%M %p")
odt <- paste(paste(odat$onset.date,"/1940",sep = ""), odat$onset.time)
onset.dt <- strptime(odt, "%m/%d/%Y %I:%M %p")
hist(onset.dt, breaks = 30, freq = TRUE)
min.obs.pos <- which(onset.dt == min(onset.dt, na.rm = TRUE))
min.obs.pos
max.obs.pos <- which(onset.dt == max(onset.dt, na.rm = TRUE))
max.obs.pos
odat[min.obs.pos, ]
odat[max.obs.pos, ]
onset.ct <- as.POSIXct(onset.dt)
odat2 <- odat[order(odat$ill, onset.ct), ]; odat2
incub.dt <- onset.dt - meal.dt
library(MASS)
truehist(as.numeric(incub.dt), nbins = 7, prob = FALSE, ylab = 'Frequency',
col = "skyblue", xlab = "Incubation Period (hours)")
mean(incub.dt, na.rm = TRUE)
median(incub.dt, na.rm = TRUE)
range(incub.dt, na.rm = TRUE)
```
vignette(ggplot2)
vignette("ggplot2")
shiny::runApp('~/Desktop/shiny_stuff')
shiny::runApp('~/Desktop/shiny_stuff')
names(iris)
names(iris)[[2]]
shiny::runApp('~/Desktop/shiny_stuff')
shiny::runApp('~/Desktop/shiny_stuff')
shiny::runApp('~/Desktop/shiny_stuff')
runExample('02_text')
runExample('02_text')
runExample("03_reactivity")
runExample("03_reactivity")
shiny::runApp('~/Desktop/shiny_stuff')
shiny::runApp("~/Desktop/shiny_stuff")
shiny::runApp("~/Desktop/shiny_stuff/")
shiny::runApp("~/Desktop/shiny_stuff/")
shiny::runApp("~/Desktop/shiny_stuff/")
shiny::runApp("~/Desktop/shiny_stuff/")
shiny::runApp("~/Desktop/shiny_stuff/")
shiny::runApp("~/Desktop/shiny_stuff/")
shiny::runApp("~/Desktop/shiny_stuff/")
shiny::runApp("~/Desktop/shiny_stuff/")
shiny::runApp("~/Desktop/shiny_stuff/")
shiny::runApp("~/Desktop/shiny_stuff/")
shiny::runApp("~/Desktop/shiny_stuff/")
shiny::runApp("~/Desktop/shiny_stuff/")
shiny::runApp("~/Desktop/shiny_stuff/")
shiny::runApp("~/Desktop/shiny_stuff/")
shiny::runApp("~/Desktop/shiny_stuff/")
shiny::runApp("~/Desktop/shiny_stuff/")
shiny::runApp("~/Desktop/shiny_stuff/kmean")
source('~/Desktop/shiny_stuff/knn/script.R', echo=TRUE)
cl
require(MASS)
test <- expand.grid(x=seq(min(train[,1]-1), max(train[,1]+1),
by=0.1),
y=seq(min(train[,2]-1), max(train[,2]+1),
by=0.1))
test
train[,1]
train[,1]-1
require(class)
classif <- knn(train, test, cl, k = 3, prob=TRUE)
prob <- attr(classif, "prob")
classif
length(test)
nrow(test)
nrow(prob)
nrow(classif)
length(classif)
prob
dataf <- bind_rows(mutate(test,
prob=prob,
cls="c",
prob_cls=ifelse(classif==cls,
1, 0)),
mutate(test,
prob=prob,
cls="v",
prob_cls=ifelse(classif==cls,
1, 0)),
mutate(test,
prob=prob,
cls="s",
prob_cls=ifelse(classif==cls,
1, 0)))
library(dplyr)
dataf <- bind_rows(mutate(test,
prob=prob,
cls="c",
prob_cls=ifelse(classif==cls,
1, 0)),
mutate(test,
prob=prob,
cls="v",
prob_cls=ifelse(classif==cls,
1, 0)),
mutate(test,
prob=prob,
cls="s",
prob_cls=ifelse(classif==cls,
1, 0)))
dataf
head(dataf)
nrow(dataf)
require(ggplot2)
ggplot(dataf) +
geom_point(aes(x=x, y=y, col=cls),
data = mutate(test, cls=classif),
size=1.2) +
geom_contour(aes(x=x, y=y, z=prob_cls, group=cls, color=cls),
bins=2,
data=dataf) +
geom_point(aes(x=x, y=y, col=cls),
size=3,
data=data.frame(x=train[,1], y=train[,2], cls=cl))
ggplot(dataf) +
geom_point(aes(x=x, y=y, col=cls, size=prob),
data = mutate(test, cls=classif)) +
scale_size(range=c(0.8, 2)) +
geom_contour(aes(x=x, y=y, z=prob_cls, group=cls, color=cls),
bins=2,
data=dataf) +
geom_point(aes(x=x, y=y, col=cls),
size=3,
data=data.frame(x=train[,1], y=train[,2], cls=cl)) +
geom_point(aes(x=x, y=y),
size=3, shape=1,
data=data.frame(x=train[,1], y=train[,2], cls=cl))
ggplot(dataf) +
geom_point(aes(x=x, y=y, col=cls, size=prob),
data = mutate(test, cls=classif)) +
scale_size(range=c(0.8, 2)) +
geom_contour(aes(x=x, y=y, z=prob_cls, group=cls, color=cls),
bins=2,
data=dataf) +
geom_point(aes(x=x, y=y, col=cls),
size=3,
data=data.frame(x=train[,1], y=train[,2], cls=cl)) +
geom_point(aes(x=x, y=y),
size=3, shape=2,
data=data.frame(x=train[,1], y=train[,2], cls=cl))
ggplot(dataf) +
geom_point(aes(x=x, y=y, col=cls, size=prob),
data = mutate(test, cls=classif)) +
scale_size(range=c(0.8, 2)) +
geom_contour(aes(x=x, y=y, z=prob_cls, group=cls, color=cls),
bins=2,
data=dataf) +
geom_point(aes(x=x, y=y, col=cls),
size=3,
data=data.frame(x=train[,1], y=train[,2], cls=cl)) +
geom_point(aes(x=x, y=y),
size=3, shape=4,
data=data.frame(x=train[,1], y=train[,2], cls=cl))
ggplot(dataf) +
geom_point(aes(x=x, y=y, col=cls, size=prob),
data = mutate(test, cls=classif)) +
scale_size(range=c(0.8, 2)) +
geom_contour(aes(x=x, y=y, z=prob_cls, group=cls, color=cls),
bins=3,
data=dataf) +
geom_point(aes(x=x, y=y, col=cls),
size=3,
data=data.frame(x=train[,1], y=train[,2], cls=cl)) +
geom_point(aes(x=x, y=y),
size=3, shape=4,
data=data.frame(x=train[,1], y=train[,2], cls=cl))
ggplot(dataf) +
geom_point(aes(x=x, y=y, col=cls, size=prob),
data = mutate(test, cls=classif)) +
scale_size(range=c(0.8, 2)) +
geom_contour(aes(x=x, y=y, z=prob_cls, group=cls, color=cls),
bins=1,
data=dataf) +
geom_point(aes(x=x, y=y, col=cls),
size=3,
data=data.frame(x=train[,1], y=train[,2], cls=cl)) +
geom_point(aes(x=x, y=y),
size=3, shape=4,
data=data.frame(x=train[,1], y=train[,2], cls=cl))
ggplot(dataf) +
geom_point(aes(x=x, y=y, col=cls, size=prob),
data = mutate(test, cls=classif)) +
scale_size(range=c(0.8, 2)) +
geom_contour(aes(x=x, y=y, z=prob_cls, group=cls, color=cls),
bins=10,
data=dataf) +
geom_point(aes(x=x, y=y, col=cls),
size=3,
data=data.frame(x=train[,1], y=train[,2], cls=cl)) +
geom_point(aes(x=x, y=y),
size=3, shape=4,
data=data.frame(x=train[,1], y=train[,2], cls=cl))
ggplot(dataf) +
geom_point(aes(x=x, y=y, col=cls, size=prob),
data = mutate(test, cls=classif)) +
scale_size(range=c(0.8, 2)) +
geom_contour(aes(x=x, y=y, z=prob_cls, group=cls, color=cls),
bins=5,
data=dataf) +
geom_point(aes(x=x, y=y, col=cls),
size=3,
data=data.frame(x=train[,1], y=train[,2], cls=cl)) +
geom_point(aes(x=x, y=y),
size=3, shape=4,
data=data.frame(x=train[,1], y=train[,2], cls=cl))
rm(list = ls())
pageWithSidebar(
headerPanel('Knn Decision Boundary'),
sidebarPanel(
#selectInput('xcol', 'X Variable', names(iris)),
#selectInput('ycol', 'Y Variable', names(iris),
#            selected=names(iris)[[2]]),
numericInput('clusters', 'K Value', 3,
min = 1, max = 9)
),
mainPanel(
plotOutput('plot1')
)
)
?par
shiny::runApp("~/Desktop/shiny_stuff/knn")
shiny::runApp("~/Desktop/shiny_stuff/knn")
shiny::runApp("~/Desktop/shiny_stuff/knn")
shiny::runApp("~/Desktop/shiny_stuff/knn")
shiny::runApp("~/Desktop/shiny_stuff/knn")
shiny::runApp("~/Desktop/shiny_stuff/knn")
data("iris")
load(iris)
classif
str(4)
char(4)
as.character(4)
